pipeline {
    agent any
    stages {
        stage('Run API scripts with Newman') {
            steps {
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    sh '''
                    cd Api/Postman
                    newman run ExamenFinalGiovanni.postman_collection.json -e finalproject_env.postman_environment.json
                    '''
                }
            }
        }
        stage('Run API scripts with RestAssured') {
            steps {
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    sh '''
                        cd Api/RESTAssured
                        mvn clean test
                        '''
                }
            }
        }
        stage('Run Jmeter scripts') {
            steps {
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    sh '''
                        export PATH=/home/pjcalvov/jmeter/apache-jmeter-5.3/bin:$PATH
                        cd Load
                        jmeter -n -t FinalProjectGiovanniVega.jmx -l TestResults.csv
                        ls
                    '''
                }
            }
        }
    }
    post{
        success{
            emailext (
                to: "${email}",
                subject: "Job '${env.JOB_NAME}' (${env.BUILD_NUMBER}) success.",
                body: "Please visit ${env.BUILD_URL} for further information.",
                from: 'jenkins@company.com',
                attachmentsPattern: 'Load/TestResults.csv')
        }
        failure{
            emailext (
                to: "${email}",
                subject: "Job '${env.JOB_NAME}' (${env.BUILD_NUMBER}) failed.",
                body: "Please visit ${env.BUILD_URL} for further information.",
                from: 'jenkins@company.com',
                attachmentsPattern: 'Load/TestResults.csv')
        }
    }
}